# Generated from DSLSQL.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\63")
        buf.write("\u01dd\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4")
        buf.write("\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3")
        buf.write("\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3")
        buf.write("!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3")
        buf.write("$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3")
        buf.write("\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'")
        buf.write("\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\7*\u0177")
        buf.write("\n*\f*\16*\u017a\13*\3*\3*\3*\3*\3*\7*\u0181\n*\f*\16")
        buf.write("*\u0184\13*\3*\5*\u0187\n*\3+\3+\3+\3+\3+\3+\7+\u018f")
        buf.write("\n+\f+\16+\u0192\13+\3+\3+\3+\3+\3,\3,\3,\6,\u019b\n,")
        buf.write("\r,\16,\u019c\3-\3-\3-\3-\7-\u01a3\n-\f-\16-\u01a6\13")
        buf.write("-\3-\3-\3.\3.\3/\3/\3\60\3\60\3\60\3\60\7\60\u01b2\n\60")
        buf.write("\f\60\16\60\u01b5\13\60\3\60\5\60\u01b8\n\60\3\60\5\60")
        buf.write("\u01bb\n\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3")
        buf.write("\61\3\62\3\62\3\62\3\62\3\62\7\62\u01cb\n\62\f\62\16\62")
        buf.write("\u01ce\13\62\3\62\3\62\3\62\3\62\3\62\3\63\6\63\u01d6")
        buf.write("\n\63\r\63\16\63\u01d7\3\63\3\63\3\64\3\64\4\u0190\u01cc")
        buf.write("\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[\2]\2_/a\60c\61e\62g\63\3\2\n\4\2))^^\4")
        buf.write("\2$$^^\3\2--\3\2bb\3\2\62;\4\2C\\c|\4\2\f\f\17\17\5\2")
        buf.write("\13\f\17\17\"\"\2\u01ea\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g")
        buf.write("\3\2\2\2\3i\3\2\2\2\5n\3\2\2\2\7s\3\2\2\2\tu\3\2\2\2\13")
        buf.write("}\3\2\2\2\r\u0083\3\2\2\2\17\u0086\3\2\2\2\21\u008b\3")
        buf.write("\2\2\2\23\u0090\3\2\2\2\25\u009c\3\2\2\2\27\u00a3\3\2")
        buf.write("\2\2\31\u00aa\3\2\2\2\33\u00ac\3\2\2\2\35\u00b3\3\2\2")
        buf.write("\2\37\u00ba\3\2\2\2!\u00c1\3\2\2\2#\u00c8\3\2\2\2%\u00cd")
        buf.write("\3\2\2\2\'\u00d2\3\2\2\2)\u00da\3\2\2\2+\u00e2\3\2\2\2")
        buf.write("-\u00e6\3\2\2\2/\u00ea\3\2\2\2\61\u00ec\3\2\2\2\63\u00f4")
        buf.write("\3\2\2\2\65\u00fc\3\2\2\2\67\u0102\3\2\2\29\u0108\3\2")
        buf.write("\2\2;\u010c\3\2\2\2=\u0110\3\2\2\2?\u0119\3\2\2\2A\u0122")
        buf.write("\3\2\2\2C\u012d\3\2\2\2E\u0138\3\2\2\2G\u0140\3\2\2\2")
        buf.write("I\u0148\3\2\2\2K\u0152\3\2\2\2M\u0159\3\2\2\2O\u0167\3")
        buf.write("\2\2\2Q\u016e\3\2\2\2S\u0186\3\2\2\2U\u0188\3\2\2\2W\u019a")
        buf.write("\3\2\2\2Y\u019e\3\2\2\2[\u01a9\3\2\2\2]\u01ab\3\2\2\2")
        buf.write("_\u01ad\3\2\2\2a\u01be\3\2\2\2c\u01c5\3\2\2\2e\u01d5\3")
        buf.write("\2\2\2g\u01db\3\2\2\2ij\7n\2\2jk\7q\2\2kl\7c\2\2lm\7f")
        buf.write("\2\2m\4\3\2\2\2no\7N\2\2op\7Q\2\2pq\7C\2\2qr\7F\2\2r\6")
        buf.write("\3\2\2\2st\7\60\2\2t\b\3\2\2\2uv\7q\2\2vw\7r\2\2wx\7v")
        buf.write("\2\2xy\7k\2\2yz\7q\2\2z{\7p\2\2{|\7u\2\2|\n\3\2\2\2}~")
        buf.write("\7y\2\2~\177\7j\2\2\177\u0080\7g\2\2\u0080\u0081\7t\2")
        buf.write("\2\u0081\u0082\7g\2\2\u0082\f\3\2\2\2\u0083\u0084\7c\2")
        buf.write("\2\u0084\u0085\7u\2\2\u0085\16\3\2\2\2\u0086\u0087\7u")
        buf.write("\2\2\u0087\u0088\7c\2\2\u0088\u0089\7x\2\2\u0089\u008a")
        buf.write("\7g\2\2\u008a\20\3\2\2\2\u008b\u008c\7U\2\2\u008c\u008d")
        buf.write("\7C\2\2\u008d\u008e\7X\2\2\u008e\u008f\7G\2\2\u008f\22")
        buf.write("\3\2\2\2\u0090\u0091\7r\2\2\u0091\u0092\7c\2\2\u0092\u0093")
        buf.write("\7t\2\2\u0093\u0094\7v\2\2\u0094\u0095\7k\2\2\u0095\u0096")
        buf.write("\7v\2\2\u0096\u0097\7k\2\2\u0097\u0098\7q\2\2\u0098\u0099")
        buf.write("\7p\2\2\u0099\u009a\7D\2\2\u009a\u009b\7{\2\2\u009b\24")
        buf.write("\3\2\2\2\u009c\u009d\7u\2\2\u009d\u009e\7g\2\2\u009e\u009f")
        buf.write("\7n\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2")
        buf.write("\7v\2\2\u00a2\26\3\2\2\2\u00a3\u00a4\7U\2\2\u00a4\u00a5")
        buf.write("\7G\2\2\u00a5\u00a6\7N\2\2\u00a6\u00a7\7G\2\2\u00a7\u00a8")
        buf.write("\7E\2\2\u00a8\u00a9\7V\2\2\u00a9\30\3\2\2\2\u00aa\u00ab")
        buf.write("\7=\2\2\u00ab\32\3\2\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae")
        buf.write("\7p\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1")
        buf.write("\7t\2\2\u00b1\u00b2\7v\2\2\u00b2\34\3\2\2\2\u00b3\u00b4")
        buf.write("\7K\2\2\u00b4\u00b5\7P\2\2\u00b5\u00b6\7U\2\2\u00b6\u00b7")
        buf.write("\7G\2\2\u00b7\u00b8\7T\2\2\u00b8\u00b9\7V\2\2\u00b9\36")
        buf.write("\3\2\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd")
        buf.write("\7g\2\2\u00bd\u00be\7c\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0")
        buf.write("\7g\2\2\u00c0 \3\2\2\2\u00c1\u00c2\7E\2\2\u00c2\u00c3")
        buf.write("\7T\2\2\u00c3\u00c4\7G\2\2\u00c4\u00c5\7C\2\2\u00c5\u00c6")
        buf.write("\7V\2\2\u00c6\u00c7\7G\2\2\u00c7\"\3\2\2\2\u00c8\u00c9")
        buf.write("\7f\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb\7q\2\2\u00cb\u00cc")
        buf.write("\7r\2\2\u00cc$\3\2\2\2\u00cd\u00ce\7F\2\2\u00ce\u00cf")
        buf.write("\7T\2\2\u00cf\u00d0\7Q\2\2\u00d0\u00d1\7R\2\2\u00d1&\3")
        buf.write("\2\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5")
        buf.write("\7h\2\2\u00d5\u00d6\7t\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8")
        buf.write("\7u\2\2\u00d8\u00d9\7j\2\2\u00d9(\3\2\2\2\u00da\u00db")
        buf.write("\7T\2\2\u00db\u00dc\7G\2\2\u00dc\u00dd\7H\2\2\u00dd\u00de")
        buf.write("\7T\2\2\u00de\u00df\7G\2\2\u00df\u00e0\7U\2\2\u00e0\u00e1")
        buf.write("\7J\2\2\u00e1*\3\2\2\2\u00e2\u00e3\7u\2\2\u00e3\u00e4")
        buf.write("\7g\2\2\u00e4\u00e5\7v\2\2\u00e5,\3\2\2\2\u00e6\u00e7")
        buf.write("\7U\2\2\u00e7\u00e8\7G\2\2\u00e8\u00e9\7V\2\2\u00e9.\3")
        buf.write("\2\2\2\u00ea\u00eb\7?\2\2\u00eb\60\3\2\2\2\u00ec\u00ed")
        buf.write("\7e\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7p\2\2\u00ef\u00f0")
        buf.write("\7p\2\2\u00f0\u00f1\7g\2\2\u00f1\u00f2\7e\2\2\u00f2\u00f3")
        buf.write("\7v\2\2\u00f3\62\3\2\2\2\u00f4\u00f5\7E\2\2\u00f5\u00f6")
        buf.write("\7Q\2\2\u00f6\u00f7\7P\2\2\u00f7\u00f8\7P\2\2\u00f8\u00f9")
        buf.write("\7G\2\2\u00f9\u00fa\7E\2\2\u00fa\u00fb\7V\2\2\u00fb\64")
        buf.write("\3\2\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff")
        buf.write("\7c\2\2\u00ff\u0100\7k\2\2\u0100\u0101\7p\2\2\u0101\66")
        buf.write("\3\2\2\2\u0102\u0103\7V\2\2\u0103\u0104\7T\2\2\u0104\u0105")
        buf.write("\7C\2\2\u0105\u0106\7K\2\2\u0106\u0107\7P\2\2\u01078\3")
        buf.write("\2\2\2\u0108\u0109\7t\2\2\u0109\u010a\7w\2\2\u010a\u010b")
        buf.write("\7p\2\2\u010b:\3\2\2\2\u010c\u010d\7T\2\2\u010d\u010e")
        buf.write("\7W\2\2\u010e\u010f\7P\2\2\u010f<\3\2\2\2\u0110\u0111")
        buf.write("\7t\2\2\u0111\u0112\7g\2\2\u0112\u0113\7i\2\2\u0113\u0114")
        buf.write("\7k\2\2\u0114\u0115\7u\2\2\u0115\u0116\7v\2\2\u0116\u0117")
        buf.write("\7g\2\2\u0117\u0118\7t\2\2\u0118>\3\2\2\2\u0119\u011a")
        buf.write("\7T\2\2\u011a\u011b\7G\2\2\u011b\u011c\7I\2\2\u011c\u011d")
        buf.write("\7K\2\2\u011d\u011e\7U\2\2\u011e\u011f\7V\2\2\u011f\u0120")
        buf.write("\7G\2\2\u0120\u0121\7T\2\2\u0121@\3\2\2\2\u0122\u0123")
        buf.write("\7w\2\2\u0123\u0124\7p\2\2\u0124\u0125\7T\2\2\u0125\u0126")
        buf.write("\7g\2\2\u0126\u0127\7i\2\2\u0127\u0128\7k\2\2\u0128\u0129")
        buf.write("\7u\2\2\u0129\u012a\7v\2\2\u012a\u012b\7g\2\2\u012b\u012c")
        buf.write("\7t\2\2\u012cB\3\2\2\2\u012d\u012e\7W\2\2\u012e\u012f")
        buf.write("\7P\2\2\u012f\u0130\7T\2\2\u0130\u0131\7G\2\2\u0131\u0132")
        buf.write("\7I\2\2\u0132\u0133\7K\2\2\u0133\u0134\7U\2\2\u0134\u0135")
        buf.write("\7V\2\2\u0135\u0136\7G\2\2\u0136\u0137\7T\2\2\u0137D\3")
        buf.write("\2\2\2\u0138\u0139\7k\2\2\u0139\u013a\7p\2\2\u013a\u013b")
        buf.write("\7e\2\2\u013b\u013c\7n\2\2\u013c\u013d\7w\2\2\u013d\u013e")
        buf.write("\7f\2\2\u013e\u013f\7g\2\2\u013fF\3\2\2\2\u0140\u0141")
        buf.write("\7K\2\2\u0141\u0142\7P\2\2\u0142\u0143\7E\2\2\u0143\u0144")
        buf.write("\7N\2\2\u0144\u0145\7W\2\2\u0145\u0146\7F\2\2\u0146\u0147")
        buf.write("\7G\2\2\u0147H\3\2\2\2\u0148\u0149\7q\2\2\u0149\u014a")
        buf.write("\7x\2\2\u014a\u014b\7g\2\2\u014b\u014c\7t\2\2\u014c\u014d")
        buf.write("\7y\2\2\u014d\u014e\7t\2\2\u014e\u014f\7k\2\2\u014f\u0150")
        buf.write("\7v\2\2\u0150\u0151\7g\2\2\u0151J\3\2\2\2\u0152\u0153")
        buf.write("\7c\2\2\u0153\u0154\7r\2\2\u0154\u0155\7r\2\2\u0155\u0156")
        buf.write("\7g\2\2\u0156\u0157\7p\2\2\u0157\u0158\7f\2\2\u0158L\3")
        buf.write("\2\2\2\u0159\u015a\7g\2\2\u015a\u015b\7t\2\2\u015b\u015c")
        buf.write("\7t\2\2\u015c\u015d\7q\2\2\u015d\u015e\7t\2\2\u015e\u015f")
        buf.write("\7K\2\2\u015f\u0160\7h\2\2\u0160\u0161\7G\2\2\u0161\u0162")
        buf.write("\7z\2\2\u0162\u0163\7k\2\2\u0163\u0164\7u\2\2\u0164\u0165")
        buf.write("\7v\2\2\u0165\u0166\7u\2\2\u0166N\3\2\2\2\u0167\u0168")
        buf.write("\7k\2\2\u0168\u0169\7i\2\2\u0169\u016a\7p\2\2\u016a\u016b")
        buf.write("\7q\2\2\u016b\u016c\7t\2\2\u016c\u016d\7g\2\2\u016dP\3")
        buf.write("\2\2\2\u016e\u016f\7c\2\2\u016f\u0170\7p\2\2\u0170\u0171")
        buf.write("\7f\2\2\u0171R\3\2\2\2\u0172\u0178\7)\2\2\u0173\u0177")
        buf.write("\n\2\2\2\u0174\u0175\7^\2\2\u0175\u0177\13\2\2\2\u0176")
        buf.write("\u0173\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u017a\3\2\2\2")
        buf.write("\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017b\3")
        buf.write("\2\2\2\u017a\u0178\3\2\2\2\u017b\u0187\7)\2\2\u017c\u0182")
        buf.write("\7$\2\2\u017d\u0181\n\3\2\2\u017e\u017f\7^\2\2\u017f\u0181")
        buf.write("\13\2\2\2\u0180\u017d\3\2\2\2\u0180\u017e\3\2\2\2\u0181")
        buf.write("\u0184\3\2\2\2\u0182\u0180\3\2\2\2\u0182\u0183\3\2\2\2")
        buf.write("\u0183\u0185\3\2\2\2\u0184\u0182\3\2\2\2\u0185\u0187\7")
        buf.write("$\2\2\u0186\u0172\3\2\2\2\u0186\u017c\3\2\2\2\u0187T\3")
        buf.write("\2\2\2\u0188\u0189\7)\2\2\u0189\u018a\7)\2\2\u018a\u018b")
        buf.write("\7)\2\2\u018b\u018c\3\2\2\2\u018c\u0190\n\4\2\2\u018d")
        buf.write("\u018f\13\2\2\2\u018e\u018d\3\2\2\2\u018f\u0192\3\2\2")
        buf.write("\2\u0190\u0191\3\2\2\2\u0190\u018e\3\2\2\2\u0191\u0193")
        buf.write("\3\2\2\2\u0192\u0190\3\2\2\2\u0193\u0194\7)\2\2\u0194")
        buf.write("\u0195\7)\2\2\u0195\u0196\7)\2\2\u0196V\3\2\2\2\u0197")
        buf.write("\u019b\5]/\2\u0198\u019b\5[.\2\u0199\u019b\7a\2\2\u019a")
        buf.write("\u0197\3\2\2\2\u019a\u0198\3\2\2\2\u019a\u0199\3\2\2\2")
        buf.write("\u019b\u019c\3\2\2\2\u019c\u019a\3\2\2\2\u019c\u019d\3")
        buf.write("\2\2\2\u019dX\3\2\2\2\u019e\u01a4\7b\2\2\u019f\u01a3\n")
        buf.write("\5\2\2\u01a0\u01a1\7b\2\2\u01a1\u01a3\7b\2\2\u01a2\u019f")
        buf.write("\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a3\u01a6\3\2\2\2\u01a4")
        buf.write("\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a7\3\2\2\2")
        buf.write("\u01a6\u01a4\3\2\2\2\u01a7\u01a8\7b\2\2\u01a8Z\3\2\2\2")
        buf.write("\u01a9\u01aa\t\6\2\2\u01aa\\\3\2\2\2\u01ab\u01ac\t\7\2")
        buf.write("\2\u01ac^\3\2\2\2\u01ad\u01ae\7/\2\2\u01ae\u01af\7/\2")
        buf.write("\2\u01af\u01b3\3\2\2\2\u01b0\u01b2\n\b\2\2\u01b1\u01b0")
        buf.write("\3\2\2\2\u01b2\u01b5\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3")
        buf.write("\u01b4\3\2\2\2\u01b4\u01b7\3\2\2\2\u01b5\u01b3\3\2\2\2")
        buf.write("\u01b6\u01b8\7\17\2\2\u01b7\u01b6\3\2\2\2\u01b7\u01b8")
        buf.write("\3\2\2\2\u01b8\u01ba\3\2\2\2\u01b9\u01bb\7\f\2\2\u01ba")
        buf.write("\u01b9\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc\3\2\2\2")
        buf.write("\u01bc\u01bd\b\60\2\2\u01bd`\3\2\2\2\u01be\u01bf\7\61")
        buf.write("\2\2\u01bf\u01c0\7,\2\2\u01c0\u01c1\7,\2\2\u01c1\u01c2")
        buf.write("\7\61\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c4\b\61\2\2\u01c4")
        buf.write("b\3\2\2\2\u01c5\u01c6\7\61\2\2\u01c6\u01c7\7,\2\2\u01c7")
        buf.write("\u01c8\3\2\2\2\u01c8\u01cc\n\4\2\2\u01c9\u01cb\13\2\2")
        buf.write("\2\u01ca\u01c9\3\2\2\2\u01cb\u01ce\3\2\2\2\u01cc\u01cd")
        buf.write("\3\2\2\2\u01cc\u01ca\3\2\2\2\u01cd\u01cf\3\2\2\2\u01ce")
        buf.write("\u01cc\3\2\2\2\u01cf\u01d0\7,\2\2\u01d0\u01d1\7\61\2\2")
        buf.write("\u01d1\u01d2\3\2\2\2\u01d2\u01d3\b\62\2\2\u01d3d\3\2\2")
        buf.write("\2\u01d4\u01d6\t\t\2\2\u01d5\u01d4\3\2\2\2\u01d6\u01d7")
        buf.write("\3\2\2\2\u01d7\u01d5\3\2\2\2\u01d7\u01d8\3\2\2\2\u01d8")
        buf.write("\u01d9\3\2\2\2\u01d9\u01da\b\63\2\2\u01daf\3\2\2\2\u01db")
        buf.write("\u01dc\13\2\2\2\u01dch\3\2\2\2\22\2\u0176\u0178\u0180")
        buf.write("\u0182\u0186\u0190\u019a\u019c\u01a2\u01a4\u01b3\u01b7")
        buf.write("\u01ba\u01cc\u01d7\3\2\3\2")
        return buf.getvalue()


class DSLSQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    STRING = 41
    BLOCK_STRING = 42
    IDENTIFIER = 43
    BACKQUOTED_IDENTIFIER = 44
    SIMPLE_COMMENT = 45
    BRACKETED_EMPTY_COMMENT = 46
    BRACKETED_COMMENT = 47
    WS = 48
    UNRECOGNIZED = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'load'", "'LOAD'", "'.'", "'options'", "'where'", "'as'", "'save'", 
            "'SAVE'", "'partitionBy'", "'select'", "'SELECT'", "';'", "'insert'", 
            "'INSERT'", "'create'", "'CREATE'", "'drop'", "'DROP'", "'refresh'", 
            "'REFRESH'", "'set'", "'SET'", "'='", "'connect'", "'CONNECT'", 
            "'train'", "'TRAIN'", "'run'", "'RUN'", "'register'", "'REGISTER'", 
            "'unRegister'", "'UNREGISTER'", "'include'", "'INCLUDE'", "'overwrite'", 
            "'append'", "'errorIfExists'", "'ignore'", "'and'", "'/**/'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "BLOCK_STRING", "IDENTIFIER", "BACKQUOTED_IDENTIFIER", 
            "SIMPLE_COMMENT", "BRACKETED_EMPTY_COMMENT", "BRACKETED_COMMENT", 
            "WS", "UNRECOGNIZED" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "STRING", "BLOCK_STRING", "IDENTIFIER", 
                  "BACKQUOTED_IDENTIFIER", "DIGIT", "LETTER", "SIMPLE_COMMENT", 
                  "BRACKETED_EMPTY_COMMENT", "BRACKETED_COMMENT", "WS", 
                  "UNRECOGNIZED" ]

    grammarFileName = "DSLSQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


